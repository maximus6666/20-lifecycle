{"version":3,"sources":["components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","getTimeString","min","Math","floor","state","time","sec","startTimer","paused","id","setInterval","updatedTime","step","onTick","setState","clearInterval","button","React","createRef","this","autostart","buttonLabel","timeString","styleWidth","className","ref","onClick","style","width","Component","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAGqBA,E,kDAEpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAaPC,cAAgB,WACf,IAAIC,EAAMC,KAAKC,MAAO,EAAKC,MAAMC,KAAO,IAAQ,IAC5CC,EAAMJ,KAAKC,MAAO,EAAKC,MAAMC,KAAO,IAAQ,IAUhD,OARIJ,EAAM,KACTA,EAAM,IAAMA,GAGTK,EAAM,KACTA,EAAM,IAAMA,GAGP,GAAN,OAAUL,EAAV,YAAiBK,IA1BC,EA6BnBC,WAAa,WACZ,GAAI,EAAKH,MAAMI,OAAQ,CACtB,IAAMC,EAAKC,aAAY,WACtB,IAAMC,EAAc,EAAKP,MAAMC,KAAO,EAAKD,MAAMQ,KACjD,EAAKR,MAAMS,OAAOF,GAClB,EAAKG,SAAS,CAACT,KAAMM,IAEG,IAApB,EAAKP,MAAMC,OACdU,cAAcN,GACd,EAAKK,SAAS,CAACN,QAAQ,OAEtB,EAAKJ,MAAMQ,MAEb,EAAKE,SAAS,CACbT,KAAM,EAAKN,MAAMM,KACjBI,GAAIA,EACJD,QAAQ,SAGc,IAApB,EAAKJ,MAAMC,MACb,EAAKS,SAAS,CAACT,KAAK,EAAKN,MAAMM,OAEjCU,cAAc,EAAKX,MAAMK,IACzB,EAAKK,SAAS,CAACN,QAAQ,KAlDxB,EAAKQ,OAASC,IAAMC,YAEpB,EAAKd,MAAQ,CACZC,KAAMN,EAAMM,KACZI,GAAG,EACHD,QAAQ,EACRI,KAAMb,EAAMa,MAAQ,IACpBC,OAAQd,EAAMc,QAAW,cATR,E,qDAwDnB,WACKM,KAAKpB,MAAMqB,WACdD,KAAKZ,e,oBAIP,WACC,IAAMc,EAAcF,KAAKf,MAAMI,OAAS,QAAU,QAC5Cc,EAAaH,KAAKnB,gBAClBuB,EAAU,UAAyB,IAAlBJ,KAAKf,MAAMC,KAAcc,KAAKpB,MAAMM,KAA3C,KAEhB,OACC,sBAAKmB,UAAU,UAAf,UACC,wBAAQA,UAAU,SAASC,IAAKN,KAAKH,OAAQU,QAASP,KAAKZ,WAA3D,SAAwEc,IACxE,8BAAMC,IACN,qBAAKK,MAAO,CAACC,MAAOL,GAAaC,UAAU,gB,GAzEZP,IAAMY,WCU1BC,MAVf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,CAAOnB,KAAM,IAAMe,WAAW,IAC9B,cAAC,EAAD,CAAOP,OAAQ,SAACR,GAAD,OAAU0B,QAAQC,IAAI,yFAAqB3B,IAAOA,KAAM,IAAOe,WAAW,EAAMR,KAAM,UCI5FqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e665fd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default class Timer extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.button = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\ttime: props.time,\r\n\t\t\tid:0,\r\n\t\t\tpaused: true,\r\n\t\t\tstep: props.step || 1000,\r\n\t\t\tonTick: props.onTick || (()=> {return}),\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetTimeString = () => {\r\n\t\tlet min = Math.floor((this.state.time / 1000) / 60);\r\n\t\tlet sec = Math.floor((this.state.time / 1000) % 60);\r\n\r\n\t\tif (min < 10 ) {\r\n\t\t\tmin = \"0\" + min;\r\n\t\t}\r\n\r\n\t\tif (sec < 10) {\r\n\t\t\tsec = \"0\" + sec;\r\n\t\t}\r\n\r\n\t\treturn `${min}:${sec}`;\r\n\t}\r\n\r\n\tstartTimer = () => {\r\n\t\tif (this.state.paused) {\r\n\t\t\tconst id = setInterval(() => {\r\n\t\t\t\tconst updatedTime = this.state.time - this.state.step;\r\n\t\t\t\tthis.state.onTick(updatedTime)\r\n\t\t\t\tthis.setState({time: updatedTime});\r\n\r\n\t\t\t\tif (this.state.time === 0) {\r\n\t\t\t\t\tclearInterval(id);\r\n\t\t\t\t\tthis.setState({paused: true});\r\n\t\t\t\t};\r\n\t\t\t}, this.state.step);\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttime: this.props.time,\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tpaused: false\r\n\t\t\t\t})\r\n\t\t}else {\r\n\t\t\tif (this.state.time === 0) {\r\n\t\t\t\t\tthis.setState({time:this.props.time});\r\n\t\t\t};\r\n\t\t\tclearInterval(this.state.id);\r\n\t\t\tthis.setState({paused: true})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {               \r\n\t\tif (this.props.autostart) {\r\n\t\t\tthis.startTimer();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst buttonLabel = this.state.paused ? \"Start\" : \"Pause\";\r\n\t\tconst timeString = this.getTimeString();\r\n\t\tconst styleWidth = `${(this.state.time * 100) / this.props.time}%`;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<button className=\"button\" ref={this.button} onClick={this.startTimer}>{buttonLabel}</button> \r\n\t\t\t\t<div>{timeString}</div>\r\n\t\t\t\t<div style={{width: styleWidth}} className=\"line\"></div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './App.css';\nimport Timer from \"./components/Timer.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Timer</h1>\n      <Timer time={5000} autostart={false}/>\n      <Timer onTick={(time) => console.log(\"Залишилось часу \" + time)} time={20000} autostart={true} step={2000}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}